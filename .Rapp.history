splineTerms
dim(splineTerms)
xMat<-cbind(1,x,splineTerms)
dim(xMat)
head(xMat)
notes4<-c(261.63,293.66,329.63,349.23,392.00,440.00,493.88,523.25)
t<-seq(0,2,by=.001);n<-length(t)
c4<-sin(2*pi*notes4[1]*t);e4<-sin(2*pi*notes4[3]*t)
g4<-sin(2*pi*notes4[5]*t)
chord<-c4+e4+g4+rnorm(n,0,0.3
)
x<-sapply(notes4,function(freq)sin(2*pi*freq*t))
x
freq
data(mtcars)
library(leaps, car)
leaps<-regsubsets(mpg ~ . , data=mtcars, nbest=1)
leaps
summary(leaps)
subsets(leaps)
subset(leaps)
subsets(leaps, statistic = "rsq")
library(car)
subsets(leaps, statistic = "rsq")
leaps<-regsubsets(mpg ~ . , data=mtcars, nbest=1)
subsets(leaps, statistic = "rsq")
subsets(leaps, statistic = "adjr2")
relimp <- calc.relimp(full.mdel,type=c("last","pratt"),rela=TRUE)
library(relaimpo)
relimp <- calc.relimp(full.mdel,type=c("last","pratt"),rela=TRUE)
relimp <- calc.relimp(full.model,type=c("last","pratt"),rela=TRUE)
full.model <- lm(mpg~., data = mtcars)
relimp <- calc.relimp(full.model,type=c("last","pratt"),rela=TRUE)
relimp
boot <- boot.relimp(full.model, b = 10, type = c("lmg", #
  "last", "first", "pratt"), rank = TRUE, #
  diff = TRUE, rela = TRUE)
boot
booteval.relimp(boot)
relimp <- calc.relimp(full.mdel,type=c("last","pratt"),rela=TRUE)
relimp <- calc.relimp(full.model,type=c("last","pratt"),rela=TRUE)
boot <- boot.relimp(fit, b = 1000, type = c("last", "pratt"), rank = TRUE, #
  diff = TRUE, rela = TRUE)
boot <- boot.relimp(full.model, b = 1000, type = c("last", "pratt"), rank = TRUE, #
  diff = TRUE, rela = TRUE)
boot <- boot.relimp(full.model, b = 100, type = c("last", "pratt"), rank = TRUE, #
  diff = TRUE, rela = TRUE)
plot(booteval.relimp(boot,sort=TRUE))
relimp
step <- stepAIC(full.model, direction="both", trace = FALSE); summary(step)
fit <- lm(mpg ~ wt + qsec + am, data = mtcars)
fit$confidence
fit$coeff
fit <- lm(mpg ~ wt + qsec + as.factor(am), data = mtcars)
fit
summary(fit)
class(mtcars$am)
mtcars
aov.cyl <- aov(mpg ~ as.factor(cyl), data = mtcars); summary(aov.cyl)
mtcars[,cols] <- data.frame(apply(myData[cols], 2, as.factor))
mtcars[,cols] <- data.frame(apply(mtcars[cols], 2, as.factor))
cols <- c(2,8,9,10,11)
mtcars[,cols] <- data.frame(apply(mtcars[cols], 2, as.factor))
mtcars
class(mtcars$am)
full.model <- lm(mpg~., data = mtcars)
step <- stepAIC(full.model, direction="both", trace = FALSE); summary(step)
mtcsrs.vif <- sqrt(vif(full.model))
mtcars.vif <- sqrt(vif(full.model))
library(leaps)#
leaps<-regsubsets(mpg ~ . , data=mtcars, nbest=1)
library(car)
subsets(leaps, statistic = "rsq")
subsets(leaps, statistic = "adjr2")
data(mtcars)
library(leaps)#
leaps<-regsubsets(mpg ~ . , data=mtcars, nbest=1)
subsets(leaps, statistic = "rsq")
subsets(leaps, statistic = "adjr2")
mtcars
data(mtcars)
mtcars$am <- as.factor(mtcars$am)
mtcars$vs <- as.factor(mtcars$vs)
full.model <- lm(mpg~., data = mtcars)
step <- stepAIC(full.model, direction="both", trace = FALSE); summary(step)
leaps<-regsubsets(mpg ~ . , data=mtcars, nbest=1)
subsets(leaps, statistic = "rsq")
cols <- c(2,8,9,10,11)#
mtcars[,cols] <- data.frame(apply(myData[cols], 2, as.factor))#
#
full.model <- lm(mpg~., data = mtcars)#
step <- stepAIC(full.model, direction="both", trace = FALSE); summary(step)
cols <- c(2,8,9,10,11)#
mtcars[,cols] <- data.frame(apply(myData[cols], 2, as.factor))
cols <- c(2,8,9,10,11)#
mtcars[,cols] <- data.frame(apply(mtcars[cols], 2, as.factor))
full.model <- lm(mpg~., data = mtcars)#
step <- stepAIC(full.model, direction="both", trace = FALSE); summary(step)
plot(full.model)
mtcars
full.model <- lm(mpg~., data = mtcars)#
step <- stepAIC(full.model, direction="back", trace = FALSE); summary(step)
data(mtcars)
mtcars$vs <- as.factor(mtcars$vs)
mtcars$am <- as.factor(mtcars$am)
full.model <- lm(mpg~., data = mtcars)#
step <- stepAIC(full.model, direction="back", trace = FALSE); summary(step)
plot(full.model)
coeff <- summary(full.model)$coeff
coeff[1,1] + c(-1,1) * qt(0.975, df = full.model$df) * coeff[1,2]
coeff
data(mtcars)
full.model <- lm(mpg~., data = mtcars)
library(leaps)#
leaps<-regsubsets(mpg ~ . , data=mtcars, nbest=1)
library(car)
subsets(leaps, statistic= "rsq")
mtcars$am <-  as.factor(mtcars$am)#
mtcars$vs <-  as.factor(mtcars$vs)
full.model <- lm(mpg~., data = mtcars)
library(relaimpo)#
relimp <- calc.relimp(full.model,type=c("last","pratt"),rela=TRUE)
boot <- boot.relimp(full.model, b = 100, type = c("last", "pratt"), rank = TRUE, diff = TRUE, rela = TRUE)#
plot(booteval.relimp(boot,sort=TRUE))
data(mtcars)
mtcars$am <-  as.factor(mtcars$am)#
mtcars$vs <-  as.factor(mtcars$vs)
step <- stepAIC(full.model, direction="both", trace = FALSE); summary(step)
library(relaimpo)#
relimp <- calc.relimp(full.model,type=c("last","pratt"),rela=TRUE)
boot <- boot.relimp(full.model, b = 100, type = c("last", "pratt"), rank = TRUE, diff = TRUE, rela = TRUE)#
plot(booteval.relimp(boot,sort=TRUE))
relimp
mtcars
fit1 <- lm(mpg ~ hp + wt + qsec + am, data = mtcars)
summary(fit1)
fit1 <- lm(mpg ~ wt + qsec + am, data = mtcars)
summary(fit1)
layout(matrix(c(1,2,3,4),2,2))#
plot(fit1)
fit1$coeff
summary(fit1)$coeff
summary(fit1)$coeff[1,1]
coeff <- summary(fit1)$coeff#
coeff[1:4,1] + c(-1,1) * qt(0.975, df = full.model$df) * coeff[1:4,2]
coeff <- summary(fit1)$coeff
coeff[1:4,1]
coeff[1,1]
coeff[1,1] + c(-1,1) * qt(0.975, df = full.model$df) * coeff[1,2]
(c(-1,1) * qt(0.975, df = full.model$df) * coeff[1,2])
(c(-1,1) * qt(0.975, df = full.model$df) * coeff[1:4,2])
coeff <- summary(fit1)$coeff#
Intercept.ci <- coeff[1,1] + (c(-1,1) * qt(0.975, df = fit1$df) * coeff[1,2])#
wt.ci <-  coeff[2,1] + (c(-1,1) * qt(0.975, df = fit1$df) * coeff[2,2])#
qsec.ci <-  coeff[3,1] + (c(-1,1) * qt(0.975, df = fit1$df) * coeff[3,2])#
am.ci <-  coeff[4,1] + (c(-1,1) * qt(0.975, df = fit1$df) * coeff[4,2])
Intercept.ci
am.ci
data(mtcars)#
cols <- c(2,8,9,10,11)#
mtcars[,cols] <- data.frame(apply(mtcars[cols], 2, as.factor))
full.model <- lm(mpg~., data = mtcars)#
step <- stepAIC(full.model, direction="both", trace = FALSE); summary(step)
library(relaimpo)#
relimp <- calc.relimp(full.model,type=c("last","pratt"),rela=TRUE)#
boot <- boot.relimp(full.model, b = 100, type = c("last", "pratt"), rank = TRUE, diff = TRUE, rela = TRUE)#
plot(booteval.relimp(boot,sort=TRUE))
relimp
data(mtcars)#
cols <- c(2,8,9,10,11)#
mtcars[,cols] <- data.frame(apply(mtcars[cols], 2, as.factor))#
full.model <- lm(mpg~., data = mtcars)#
step <- stepAIC(full.model, direction="both", trace = FALSE); summary(step)#
#
fit2 <- lm(mpg ~ cyl + hp + wt + am, data = mtcars)\
data(mtcars)#
cols <- c(2,8,9,10,11)#
mtcars[,cols] <- data.frame(apply(mtcars[cols], 2, as.factor))#
full.model <- lm(mpg~., data = mtcars)#
step <- stepAIC(full.model, direction="both", trace = FALSE); summary(step)#
#
fit2 <- lm(mpg ~ cyl + hp + wt + am, data = mtcars)
layout(matrix(c(1,2,3,4),2,2))#
plot(fit2)
coeff <- summary(fit2)$coeff#
Intercept.ci <- coeff[1,1] + (c(-1,1) * qt(0.975, df = fit2$df) * coeff[1,2])#
cyl6.ci <-  coeff[2,1] + (c(-1,1) * qt(0.975, df = fit2$df) * coeff[2,2])#
cyl8.ci <-  coeff[3,1] + (c(-1,1) * qt(0.975, df = fit2$df) * coeff[3,2])#
hp.ci <- coeff[4,1] + (c(-1,1) * qt(0.975, df = fit2$df) * coeff[4,2])#
wt.ci <-  coeff[5,1] + (c(-1,1) * qt(0.975, df = fit1$df) * coeff[5,2])#
am.ci <-  coeff[6,1] + (c(-1,1) * qt(0.975, df = fit2$df) * coeff[6,2])
am.ci
data(mtcars)#
full.model <- lm(mpg~., data = mtcars)#
library(leaps)#
leaps<-regsubsets(mpg ~ . , data=mtcars, nbest=1)
library(cluster)
subsets(leaps, statistic = "adjr2")
library(car)
library(cluster)
library(MASS)
subsets(leaps, statistic = "adjr2")
library(relaimpo)#
relimp <- calc.relimp(full.model,type=c("last","pratt"),rela=TRUE)#
#bootstrap replicates. Note: larger bootstrap replicates will incurr in#
#a singularity#
boot <- boot.relimp(full.model, b = 100, type = c("last", "pratt"), rank = TRUE, diff = TRUE, rela = TRUE)#
plot(booteval.relimp(boot,sort=TRUE))
layout(matrix(c(1,2),1,1))#
data(mtcars)#
full.model <- lm(mpg~., data = mtcars)#
library(leaps)#
leaps<-regsubsets(mpg ~ . , data=mtcars, nbest=1)#
# view results #
summary(leaps)#
# plot statistic rsq and adjr2#
library(cluster)#
subsets(leaps, statistic= "rsq")#
subsets(leaps, statistic = "adjr2")#
#assessing relative importance in linear models.#
library(relaimpo)#
relimp <- calc.relimp(full.model,type=c("last","pratt"),rela=TRUE)#
#bootstrap replicates. Note: larger bootstrap replicates will incurr in#
#a singularity#
boot <- boot.relimp(full.model, b = 100, type = c("last", "pratt"), rank = TRUE, diff = TRUE, rela = TRUE)#
plot(booteval.relimp(boot,sort=TRUE))
?subsets
subsets(leaps, statistic= "rsq")
subsets(leaps, statistic= "rsq", legend = c(0.5,0.5))
subsets(leaps, statistic= "rsq", legend = 0.5)
subsets(leaps, statistic= "rsq", legend = FALSE)
m <- subsets(leaps, statistic= "rsq", legend = FALSE)
m <- subsets(leaps, statistic= "rsq")
legend(locator(1))
m <- subsets(leaps, statistic= "rsq", legend = locator(1))
subsets(leaps, statistic= "rsq", legend = locator(1))
subsets(leaps, statistic= "rsq")
legend(locator(1))
m <- subsets(leaps, statistic= "rsq", legend = FALSE)
par(mfrow=c(1,2)
)
m <- subsets(leaps, statistic= "rsq", legend = FALSE)
plot(booteval.relimp(boot,sort=TRUE))
par(mfrow=c(1,2))
plot(booteval.relimp(boot,sort=TRUE))
par(mfrow=c(1,2))
m <- subsets(leaps, statistic= "rsq", legend = FALSE)
m <- subsets(leaps, statistic= "adjr2", legend = FALSE)
plot(wt, mpg, data = mtcars, pch = 19, col = "red")
data(mtcars)
plot(wt, mpg, data = mtcars, pch = 19, col = "red")
plot(mtcars$wt, mtcars$mpg, pch = 19, col = "red")
data(mtcars)#
mtcars$am <-  as.factor(mtcars$am)#
mtcars$vs <-  as.factor(mtcars$vs)#
fit1 <- lm(mpg ~ wt + qsec + am, data = mtcars)#
#
plot(wt, mpg, data = mtcars, pch = 19, col = "red")
plot(mtcars$wt, mtcars$mpg, pch = 19, col = "red")
summary(fit1)
data(mtcars)
mtcars$am <-  as.factor(mtcars$am)#
mtcars$vs <-  as.factor(mtcars$vs)#
fit1 <- lm(mpg ~ wt + qsec + am, data = mtcars)\
mtcars$am <-  as.factor(mtcars$am)#
mtcars$vs <-  as.factor(mtcars$vs)#
fit1 <- lm(mpg ~ wt + qsec + am, data = mtcars)
summary(fit1)
pwt <- with(mtcars, data.frame(wt = seq(min(wt), max(wt), length = 100),#
                               mpg = rep(mean(mpg), 100)))
pwt
pwt <- with(mtcars, data.frame(wt = seq(min(wt), max(wt), length = 100),#
                               qsec = rep(mean(qsec), 100)))#
pqsec <- with(dat, data.frame(wt = rep(mean(wt), 100),#
                               qsec = seq(min(qsec), max(qsec), length = 100)))
pwt <- with(mtcars, data.frame(wt = seq(min(wt), max(wt), length = 100),#
                               qsec = rep(mean(qsec), 100)))#
pqsec <- with(mtcars, data.frame(wt = rep(mean(wt), 100),#
                               qsec = seq(min(qsec), max(qsec), length = 100)))
pwt <- transform(pwt, yhat = predict(mod, pwt))#
pqsec <- transform(pqsec, yhat = predict(mod, pqsec))
pwt <- transform(pwt, yhat = predict(fit1, pwt))#
pqsec <- transform(pqsec, yhat = predict(fit1, pqsec))
pwt <- with(mtcars, data.frame(wt = seq(min(wt), max(wt), length = 100),#
                               qsec = rep(mean(qsec), 100), am = rep(1, 100)))#
pqsec <- with(mtcars, data.frame(wt = rep(mean(wt), 100),#
                               qsec = seq(min(qsec), max(qsec), length = 100),#
                               am = rep(1, 100)))
pwt
pwt <- transform(pwt, yhat = predict(fit1, pwt))#
pqsec <- transform(pqsec, yhat = predict(fit1, pqsec))
sample(1,0, 10)
sample(1,0, rep = 10)
sample(1,0, 100)
sample(10, 1 , 0)
sample(10, 1)
sample(10, 5)
sample(10, 1:0)
sample(10, 5)
sample(0:1, 5)
sample(1, 5)
sample(6, 5)
sample(0:1, 100, replacement = TRUE)
sample(0:1, 100, TRUE)
library(rgl)
install.packages(rgl)
install.packages("rgl")
library(rgl)
plot3d(wt, qsec, mpg, col="red", size=3)
attach(mtcars)
plot3d(wt, qsec, mpg, col="red", size=3)
plot3d(wt, qsec, mpg, col="red", size=6)
plot3d(wt, qsec, mpg, col=(mtcars$am = 1)*1+1, size=6)
plot3d(wt, qsec, mpg, col=as.integer(mtcars$am), size=6)
plot3d(wt, qsec, mpg, col=as.integer(mtcars$am)*1+1, size=6)
plot3d(wt, qsec, mpg, col=as.integer(mtcars$am + 1), size=6)
plot3d(wt, qsec, mpg, col=as.integer(mtcars$am + 1), size=6, box=FALSE)
colors =c("blue","red")
plot3d(wt, qsec, mpg, col=as.integer(mtcars$am + 1), size=6, box=FALSE)
mtcars <- data.frame(mtcars)
mtcars
data(mtcars)
mtcars
plot3d(wt, qsec, mpg, col=as.integer(mtcars$am + 1), size=6, box=FALSE)
plot3d(wt, qsec, mpg, col=as.integer(mtcars$am + 1), size=10, box=FALSE)
plot3d(wt, qsec, mpg, col=(mtcars$am + 1), size=10, box=FALSE)
plot3d(wt, qsec, mpg, col=(mtcars$am + 1), size=10, box=FALSE, xlab = "weight")
plot3d(wt, qsec, mpg, col=(mtcars$am + 1), size=10, box=FALSE, xlab = "weight (lb/1000)", ylab = "1/4 of a mile time (sec)")
plot3d(wt, qsec, mpg, col=(mtcars$am + 1), size=10, box=FALSE, xlab = "weight (lb/1000)", ylab = "1/4 of a mile time (sec)", zlab = "miles per gallon")
plot3d(wt, qsec, mpg, col=(mtcars$am + 1), size=10, xlab = "weight (lb/1000)", ylab = "1/4 of a mile time (sec)", zlab = "miles per gallon")
rm(list=ls())#
data(mtcars)#
full.model <- lm(mpg~., data = mtcars)#
library(leaps)
leaps<-regsubsets(mpg ~ . , data=mtcars, nbest=1)
library(car)
library(cluster)
subsets(leaps, statistic= "rsq", legend = FALSE)
plot2 <-subsets(leaps, statistic = "adjr2", legend = FALSE) # R or clean all data store before you start regsubsets
rm(list=ls())#
data(mtcars)#
library(relaimpo)#
relimp <- calc.relimp(full.model,type=c("last","pratt"),rela=TRUE)#
#bootstrap replicates. Note: larger bootstrap replicates will incurr in#
#a singularity#
boot <- boot.relimp(full.model, b = 100, type = c("last", "pratt"), rank = TRUE, diff = TRUE, rela = TRUE)#
plot(booteval.relimp(boot,sort=TRUE))
rm(list=ls())#
data(mtcars)#
full.model <- lm(mpg~., data = mtcars)#
library(relaimpo)#
relimp <- calc.relimp(full.model,type=c("last","pratt"),rela=TRUE)#
#bootstrap replicates. Note: larger bootstrap replicates will incurr in#
#a singularity#
boot <- boot.relimp(full.model, b = 100, type = c("last", "pratt"), rank = TRUE, diff = TRUE, rela = TRUE)#
plot(booteval.relimp(boot,sort=TRUE))
rm(list=ls())#
data(mtcars)#
mtcars$am <-  as.factor(mtcars$am)#
mtcars$vs <-  as.factor(mtcars$vs)#
fit1 <- lm(mpg ~ wt + qsec + am, data = mtcars)
layout(matrix(c(1,2,3,4),2,2))#
plot(fit1)
coeff <- summary(fit1)$coeff#
Intercept.ci <- coeff[1,1] + (c(-1,1) * qt(0.975, df = fit1$df) * coeff[1,2])#
wt.ci <-  coeff[2,1] + (c(-1,1) * qt(0.975, df = fit1$df) * coeff[2,2])#
qsec.ci <-  coeff[3,1] + (c(-1,1) * qt(0.975, df = fit1$df) * coeff[3,2])#
am.ci <-  coeff[4,1] + (c(-1,1) * qt(0.975, df = fit1$df) * coeff[4,2])
plot3d(wt, qsec, mpg, col=(mtcars$am + 1), size=10, xlab = "weight (lb/1000)", ylab = "1/4 of a mile time (sec)", zlab = "miles per gallon")
library(rgl)#
plot3d(wt, qsec, mpg, col=(mtcars$am + 1), size=10, xlab = "weight (lb/1000)", ylab = "1/4 of a mile time (sec)", zlab = "miles per gallon")
data(mtcars)
library(rgl)#
plot3d(wt, qsec, mpg, col=(mtcars$am + 1), size=10, xlab = "weight (lb/1000)", ylab = "1/4 of a mile time (sec)", zlab = "miles per gallon")
library(rgl)#
plot3d(mtcars$wt, mtcars$qsec, mtcars$mpg, col=(mtcars$am + 1), size=10, xlab = "weight (lb/1000)", ylab = "1/4 of a mile time (sec)", zlab = "miles per gallon")
fit1
summary(fit1)
intercept.ci
Intercept.ci
wt.ci
am.ci
